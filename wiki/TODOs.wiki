Notable TODOs, in no particular order:

  *  Copy/paste. The copy/cut support works, but paste is trickier because the target of the paste has to accommodate multiple types of Serializables and/or QGraphicsItems types.
  *  When loading image files, it uses the file size to determine if it's a board or a piece. This works fine for 90% of cases, but how this is determined needs to be configurable for those other 10%.
  *  Figure out how we're gonna do plugins, on-board Widgets, and such. Unfortunate, s11n's plugin layer won't work on Windows (don't ask), so that one's not too useful for QBoard (but we may use it as an interim solution, since it will work (should) on Windows for plugins statically linked to the app).
  *  Allow selection of the default background/border/etc for new pieces.
  *  Add per-piece notes and an appropriate editor widget.
  *  Contemplate the "droplets" concept for configuring pieces - little drag/droppable widgets which, when dropped on a piece, change some property. (The DragDropRobot example from the Qt sources shows how to do this.)
  *  Add QScriptEngine (JavaScript) bindings.


Specific to qboardbatch:

  *  Add support for Lines. This will wait until the QGILineBinder code is refactored a bit to make it easier to use (programmatically speaking).
  *  Add support for html widgets. This is awaiting some updates in QGIHtml to make it fit into the current object model better.