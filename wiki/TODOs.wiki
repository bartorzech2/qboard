Bugs specific to Qt 4.3.0-4.3.5: 

  *  Most of the app icons don't appear! i can't explain why, nor find a pattern amongst the icons which do show up vs. those which don't!
  *  Board doesn't scale properly. It stretches the bg image in unsired ways.
  *  Help browser is disabled (QWebKit missing). Need to re-implement using a QTextBrowser (or similar).

Notable TODOs, in no particular order:

  *  Copy/paste. The copy/cut support works, but paste is trickier because the target of the paste has to accommodate multiple types of Serializables and/or QGraphicsItems types.
  *  When loading image files, it uses the file size to determine if it's a board or a piece. This works fine for 90% of cases, but how this is determined needs to be configurable for those other 10%.
  *  Figure out how we're gonna do plugins, on-board Widgets, and such.
  *  Allow selection of default background/border/etc for new pieces.
  *  Add piece popup menu to set common properties (border style, bg color, etc).
  *  Add per-piece notes and an appropriate editor widget.
  *  Contemplate the "droplets" concept for configuring pieces - little drag/droppable widgets which, when dropped on a piece, change some property. (The DragDropRobot example from the Qt sources shows how to do this.)
  *  Add QScriptEngine (JavaScript) bindings.

Some bugs which need to be dealt with eventually:

  *  it's possible to drag items out of bounds of the board, and impossible to get them back if you do (unless you edit a serialized copy of the game to hack the piece geometry).
  *  Scaling the board forces the viewport back to (0,0).
  *  Scaling undoes rotation. This is a side-effect of our custom size/paint handling in QBoardView, i think.
  *  Adding objects to the board adds them at the top/left. i'd prefer that the new pieces are added to the current center of the viewport, or at least the top/left of the viewport (as opposed to the top/left of the board).

Specific to qboardbatch:

  *  Add support for Lines. This will wait until the QGILineBinder code is refactored a bit to make it easier to use (programmatically speaking).
  *  Add support for html widgets.